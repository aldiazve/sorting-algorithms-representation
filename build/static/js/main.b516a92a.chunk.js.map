{"version":3,"sources":["utilities/d3BarChart/index.js","components/IsortCompPlot/index.js","components/IsortTimePlot/index.js","components/IsortWhileQuestionPlot/index.js","App.js","index.js"],"names":["d3","window","BarChartContainer","styled","_templateObject","margin","top","right","bottom","left","width","height","x","scaleBand","range","padding","y","scaleLinear","BarChart","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","drawChart","selectAll","state","id","remove","g","select","attr","append","data","forEach","d","value","domain","map","style","axisBottom","axisLeft","text","enter","bandwidth","probability","keys","legend","i","item","Math","random","toString","substr","prevProps","setState","react_default","a","createElement","className","React","Component","Section","div","IsortCompPlot_templateObject","TableContainer","_templateObject2","IsortCompPlot","isortSteps","aux","j","steps","v","slice","length","countSteps","permutations","totalSteps","singleCaseSteps","concurrency","key","index","average","n","_this$countSteps","prevState","d3BarChart_BarChart","config","barChartConfig","IsortTimePlot_templateObject","IsortTimePlot_templateObject2","IsortTimePlot","min","max","push","parseInt","filter","step","IsortTimePlot_Section","IsortTimePlot_TableContainer","IsortWhileQuestionPlot_templateObject","IsortWhileQuestionPlot_templateObject2","IsortWhileQuestionPlot","IsortWhileQuestionPlot_Section","IsortWhileQuestionPlot_TableContainer","loading","AppContainer","App_templateObject","Control","App_templateObject2","SortingComponents","_templateObject3","App","handleChange","event","target","runSimulation","e","preventDefault","findPerms","base","perm","cases","ret","rest","concat","type","name","onChange","onClick","IsortCompPlot_IsortCompPlot","IsortTimePlot_IsortTimePlot","IsortWhileQuestionPlot_IsortWhileQuestionPlot","ReactDOM","render","App_App","document","getElementById"],"mappings":"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","file":"static/js/main.b516a92a.chunk.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nconst d3 = window.d3;\n\nconst BarChartContainer = styled('svg')`\n  width: 100%;\n  height: auto;\n\n  font-size: 14px;\n\n  .axis path,\n  .axis line {\n    fill: none;\n    stroke: #000;\n    shape-rendering: crispEdges;\n  }\n\n  .bar {\n    fill: #435058;\n  }\n\n  .bar:hover {\n    fill: #BCB8B1 ;\n  }\n\n  .x.axis path {\n    display: none;\n  }\n`;\n\nconst margin = {top: 40, right: 20, bottom: 30, left: 25};\nconst width = 960 - margin.left - margin.right;\nconst height = 500 - margin.top - margin.bottom;\n\nconst x = d3.scaleBand()\n          .range([0, width])\n          .padding(0.1);\n\nconst y = d3.scaleLinear()\n          .range([height, 0]);\n\n\nexport default class BarChart extends React.Component {\n  \n  constructor(props) {\n    super(props)\n      const { data } = props\n      this.state = {\n        data,\n        id : 'd3' + Math.random().toString().substr(2),\n      }\n  }\n\n  componentDidMount() {\n    this.drawChart();\n  }\n\n\n\n  componentDidUpdate(prevProps){\n    if(prevProps.data !== this.props.data){\n      this.setState({          \n          data: this.props.data\n      });\n      this.drawChart();\n    }\n  }\n\n\n  drawChart = () => {\n    // Clearing the previous chart\n    d3.selectAll('.' + this.state.id + \" > *\").remove();\n\n    const svg = d3.select('.' + this.state.id)\n    .attr(\"viewBox\", \"0 0 1005 550\")\n    .attr(\"preserveAspectRatio\", \"xMidYMid meet\")\n\n    const g = svg.append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n    const data = this.props.data\n\n    data.forEach(function(d) {\n      d.value = +d.value;\n    });\n\n    x.domain(data.map(function(d) { return d.value; }));\n    y.domain([0, 1]);\n\n    g.append(\"g\")\n        .attr(\"class\", \"x axis\")\n        .style(\"font-size\", 14)\n        .attr(\"transform\", \"translate(0,\" + height + \")\")\n        .call(d3.axisBottom(x));\n\n    g.append(\"g\")\n        .attr(\"class\", \"y axis\")\n        .call(d3.axisLeft(y))\n\n    g.append(\"g\")\n      .append(\"text\")\n        .attr(\"y\", 6)\n        .attr(\"dy\", \"20px\")\n        .attr(\"transform\", \"rotate(-90)\")\n        .style(\"font-size\", 20)\n        .style(\"text-anchor\", \"end\")\n        .attr(\"font-weight\", \"bold\")\n        .text(\"Probability\");\n\n    g.append(\"g\")\n      .append(\"text\")\n        .attr(\"x\", width - 24)\n        .attr(\"y\", height + 40)\n        .attr(\"dx\", \"20px\")\n        .style(\"font-size\", 20)\n        .style(\"text-anchor\", \"end\")\n        .attr(\"font-weight\", \"bold\")\n        .text(\"Steps\");\n\n    g.selectAll(\".bar\")\n        .data(data)\n      .enter().append(\"rect\")\n        .attr(\"class\", \"bar\")\n        .attr(\"x\", function(d) { return x(d.value); })\n        .attr(\"width\", x.bandwidth())\n        .attr(\"y\", function(d) { return y(d.probability); })\n        .attr(\"height\", function(d) { return height - y(d.probability); })\n\n\n    const legend = g.append(\"g\")\n      .attr(\"font-family\", \"sans-serif\")\n      .attr(\"font-size\", 20)\n      .attr(\"text-anchor\", \"end\")\n    .selectAll(\"g\")\n    .data(Object.keys(this.props.legend))\n    .enter().append(\"g\")\n      .attr(\"transform\", function(d, i) { return \"translate(0,\" + i * 20 + \")\"; });\n\n    legend.append(\"text\")\n      .attr(\"x\", width - 24)\n      .attr(\"y\", 9.5)\n      .attr(\"dy\", \"0.32em\")\n      .attr(\"text-align\", \"right\")\n      .attr(\"font-weight\", \"bold\")\n      .text((item) => (item + ': ' + this.props.legend[item]));\n  }\n\n  render() {\n    return(\n      <BarChartContainer className={this.state.id}/>\n    )\n  }\n};","import React from 'react';\nimport styled from 'styled-components';\nimport BarChart from '../../utilities/d3BarChart';\n\nconst Section = styled.div`\n  width: 100%;\n  margin-top: 20px;\n`;\n\nconst TableContainer = styled.div`\n  width: 100%;\n  height: 300px;\n  overflow-y: auto;\n\n  table {\n    margin-top: 30px;\n    width: 100%;\n    height: auto;\n    text-align: center;\n    border-collapse: collapse;\n    padding: 5px;\n    border-spacing: 0px;\n\n    border: 1px solid black;\n    \n    th {\n      background-color: #C2D076;\n    }\n\n    th, td {\n      padding: 5px;\n      border: 1px solid #435058;\n    }\n\n    tr {\n      height: 30px;\n\n      &:hover {\n        background-color: #f5f5f5;\n      }\n    }\n  }\n`\n\nexport default class IsortCompPlot extends React.Component {\n  \n  constructor(props){\n    super(props);\n    // Initializating the premutation module:\n    const { permutations, n } = props\n    this.state = {\n      permutations,\n      n,\n      average: 0,\n      steps: [],\n    }\n  }\n\n  componentDidMount() {\n    const { average, steps } = this.countSteps(this.state.permutations);\n     this.setState((props, prevState) => ({\n      average,\n      steps,\n    }));\n  }\n  // Translation of the origial java function to javascript.\n  isortSteps = (aux) => {\n    let steps = 0;\n    let i,j,x;\n    \n    //Making a shallow clone\n    let v = aux.slice();\n\n    for(i = 1; i < v.length; i++) {\n      x = v[i];\n      j = i-1;\n      \n      while( (j > -1)&& (v[j] > x)  ){\n          v[j+1] = v[j];\n          j--;  \n          steps+=1;\n          \n      }\n      if (j !== -1) steps++;\n      v[j+1] = x;\n    }\n    return steps; \n  }\n\n  countSteps = (permutations) => {\n    let totalSteps = 0;\n    let steps = {}\n    for (let i = 0; i < permutations.length; i++) {\n      let singleCaseSteps = this.isortSteps(permutations[i]);\n      totalSteps += singleCaseSteps;\n      steps[singleCaseSteps] ? steps[singleCaseSteps].concurrency = steps[singleCaseSteps].concurrency + 1 : steps[singleCaseSteps] = {concurrency : 1};\n    }\n    steps = Object.keys(steps).map((key, index) => {\n      steps[key].probability = steps[key].concurrency / permutations.length;\n      steps[key].value = key;\n      return steps[key]\n    })\n    const average = totalSteps / permutations.length;\n    return {average: average, steps: steps};\n  }\n\n  render() {\n    return(\n      <Section>\n        <h2>Comparations</h2>\n        <TableContainer>\n          <table>\n            <thead>\n              <tr>\n                <th>P()</th>\n                <th>Probability</th>\n                <th>Concurrency</th>\n              </tr>\n            </thead>\n            <tbody>\n              {this.state.steps.map((item) => {\n                return <tr key={item.value}>\n                  <td>P({item.value})</td>\n                  <td>{item.probability}</td>\n                  <td>{item.concurrency}</td>\n                </tr>\n              })}\n            </tbody>\n          </table>\n        </TableContainer>\n        <h4>Promedio de pasos hechos: {this.state.average}</h4>\n        <BarChart \n          data={this.state.steps}\n          legend={{ n: this.state.n, average: this.state.average, permutations: this.state.permutations.length}}\n          config={this.state.barChartConfig}\n        />\n      </Section>\n    )\n  }\n};","import React from 'react';\nimport styled from 'styled-components';\nimport BarChart from '../../utilities/d3BarChart';\n\nconst Section = styled.div`\n  width: 100%;\n  margin-top: 20px;\n`;\n\nconst TableContainer = styled.div`\n  width: 100%;\n  height: 300px;\n  overflow-y: auto;\n\n  table {\n    margin-top: 30px;\n    width: 100%;\n    height: auto;\n    text-align: center;\n    border-collapse: collapse;\n    padding: 5px;\n    border-spacing: 0px;\n\n    border: 1px solid black;\n    \n    th {\n      background-color: #C2D076;\n    }\n\n    th, td {\n      padding: 5px;\n      border: 1px solid #435058;\n    }\n\n    tr {\n      height: 30px;\n\n      &:hover {\n        background-color: #f5f5f5;\n      }\n    }\n  }\n`\n\nexport default class IsortTimePlot extends React.Component {\n  \n  constructor(props){\n    super(props);\n    // Initializating the premutation module:\n    const { permutations, n } = props\n    this.state = {\n      permutations,\n      n,\n      average: 0,\n      steps: [],\n    }\n  }\n\n  componentDidMount() {\n    const { average, steps } = this.countSteps(this.state.permutations);\n     this.setState((props, prevState) => ({\n      average,\n      steps,\n    }));\n  }\n  // Translation of the origial java function to javascript.\n  isortSteps = (aux) => {\n    let steps = 0;\n    let i,j,x;\n    \n    //Making a shallow clone\n    let v = aux.slice();\n\n    for(i = 1; i < v.length; i++) {\n      x = v[i];\n      j = i-1;\n      \n      while( (j > -1)&& (v[j] > x)  ){\n          v[j+1] = v[j];\n          j--;  \n          steps+=3;\n          \n      }\n      steps++;\n\n      v[j+1] = x;\n      steps+=4;\n\n    }\n\n    steps ++;\n    return steps; \n  }\n\n  countSteps = (permutations) => {\n    let totalSteps = 0;\n    let steps = [];\n    let min = 10001;\n    let max = 0;\n    for (let i = 0; i < 1001; i++) {\n      steps.push({concurrency: 0, probability: 0, value: i})\n    }\n\n    for (let i = 0; i < permutations.length; i++) {\n      let singleCaseSteps = this.isortSteps(permutations[i]);\n      totalSteps += singleCaseSteps;\n      steps[singleCaseSteps] ? steps[singleCaseSteps].concurrency = steps[singleCaseSteps].concurrency + 1 : steps[singleCaseSteps] = {concurrency : 1};\n    }\n\n\n    steps = Object.keys(steps).map((key, index) => {\n      steps[key].probability = steps[key].concurrency / permutations.length;\n      steps[key].value = key;\n      return steps[key]\n    })\n\n    steps.forEach((item) => {\n      if(item.concurrency && min > parseInt(item.value)) min = item.value\n      if(item.concurrency && max < parseInt(item.value)) max = item.value \n    })\n\n    steps = steps.filter(step => {\n      return (parseInt(step.value) >= min && parseInt(step.value) <= max)\n    })\n    const average = totalSteps / permutations.length;\n    return {average: average, steps: steps};\n  }\n\n  render() {\n    return(\n      <Section>\n        <h2>Time</h2>\n        <TableContainer>\n          <table>\n            <thead>\n              <tr>\n                <th>P()</th>\n                <th>Probability</th>\n                <th>Concurrency</th>\n              </tr>\n            </thead>\n            <tbody>\n              {this.state.steps.map((item) => {\n                return <tr key={item.value}>\n                  <td>P({item.value})</td>\n                  <td>{item.probability}</td>\n                  <td>{item.concurrency}</td>\n                </tr>\n              })}\n            </tbody>\n          </table>\n        </TableContainer>\n        <h4>Promedio de pasos hechos: {this.state.average}</h4>\n        <BarChart \n          data={this.state.steps}\n          legend={{ n: this.state.n, average: this.state.average, permutations: this.state.permutations.length}}\n          config={this.state.barChartConfig}\n        />\n      </Section>\n    )\n  }\n};","import React from 'react';\nimport styled from 'styled-components';\nimport BarChart from '../../utilities/d3BarChart';\n\nconst Section = styled.div`\n  width: 100%;\n  margin-top: 20px;\n  \n`;\n\nconst TableContainer = styled.div`\n  width: 100%;\n  height: 300px;\n  overflow-y: auto;\n\n  table {\n    margin-top: 30px;\n    width: 100%;\n    height: auto;\n    text-align: center;\n    border-collapse: collapse;\n    padding: 5px;\n    border-spacing: 0px;\n\n    border: 1px solid black;\n    \n    th {\n      background-color: #C2D076;\n    }\n\n    th, td {\n      padding: 5px;\n      border: 1px solid #435058;\n    }\n\n    tr {\n      height: 30px;\n\n      &:hover {\n        background-color: #f5f5f5;\n      }\n    }\n  }\n`\n\nexport default class IsortWhileQuestionPlot extends React.Component {\n  \n  constructor(props){\n    super(props);\n    // Initializating the premutation module:\n    const { permutations, n } = props\n    this.state = {\n      permutations,\n      n,\n      average: 0,\n      steps: [],\n    }\n  }\n\n  componentDidMount() {\n    const { average, steps } = this.countSteps(this.state.permutations);\n     this.setState((props, prevState) => ({\n      average,\n      steps,\n    }));\n  }\n  // Translation of the origial java function to javascript.\n  isortSteps = (aux) => {\n    let steps = 0;\n    let i,j,x;\n    \n    //Making a shallow clone\n    let v = aux.slice();\n\n    for(i = 1; i < v.length; i++) {\n      x = v[i];\n      j = i-1;\n      \n      while( (j > -1)&& (v[j] > x)  ){\n          v[j+1] = v[j];\n          j--;  \n          steps+=1;\n          \n      }\n      steps++;\n      \n      v[j+1] = x;\n    }\n    return steps; \n  }\n\n  countSteps = (permutations) => {\n    let totalSteps = 0;\n    let steps = [];\n    for (let i = 0; i < permutations.length; i++) {\n      let singleCaseSteps = this.isortSteps(permutations[i]);\n      totalSteps += singleCaseSteps;\n      steps[singleCaseSteps] ? steps[singleCaseSteps].concurrency = steps[singleCaseSteps].concurrency + 1 : steps[singleCaseSteps] = {concurrency : 1};\n    }\n\n\n    steps = Object.keys(steps).map((key, index) => {\n      steps[key].probability = steps[key].concurrency / permutations.length;\n      steps[key].value = key;\n      return steps[key]\n    })\n\n    const average = totalSteps / permutations.length;\n    return {average: average, steps: steps};\n  }\n\n  render() {\n    return(\n      <Section>\n        <h2>While questions</h2>\n        <TableContainer>\n          <table>\n            <thead>\n              <tr>\n                <th>P()</th>\n                <th>Probability</th>\n                <th>Concurrency</th>\n              </tr>\n            </thead>\n            <tbody>\n              {this.state.steps.map((item) => {\n                return <tr key={item.value}>\n                  <td>P({item.value})</td>\n                  <td>{item.probability}</td>\n                  <td>{item.concurrency}</td>\n                </tr>\n              })}\n            </tbody>\n          </table>\n        </TableContainer>\n        <h4>Promedio de pasos hechos: {this.state.average}</h4>\n        {!this.state.loading ? \n          <BarChart \n            data={this.state.steps}\n            legend={{ n: this.state.n, average: this.state.average, permutations: this.state.permutations.length}}\n            config={this.state.barChartConfig}\n          /> : null}\n      </Section>\n    )\n  }\n};","import React from 'react';\nimport styled from 'styled-components'\n\n// Sorting components\nimport IsortCompPlot from './components/IsortCompPlot';\nimport IsortTimePlot from './components/IsortTimePlot';\nimport IsortWhileQuestionPlot from './components/IsortWhileQuestionPlot';\n\n\nconst AppContainer = styled.div`\n  width: 100vw;\n  padding: 0px 10%;\n  box-sizing: border-box;\n  text-align: center;\n`\n\nconst Control = styled.div`\n  width: 80%;\n  text-align: left;\n\n  form {\n    input {\n      height: 20px;\n      margin: 0px 5px;\n      padding: 0px 5px;\n      border: solid 1px black;\n      border-radius: 5px;\n    }\n\n    button {\n      cursor: pointer;\n      padding: 5px 10px;\n      border: 1px solid gray;\n      border-radius: 4px;\n\n      &:hover {\n        background-color: darkgray;\n      }\n    }\n  }\n`\n\nconst SortingComponents = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  height: auto;\n  align-items: center;\n  box-sizing: border-box;\n\n`\n\nexport default class App extends React.Component {\n\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      n: 4,\n      permutations: null,\n      loading: true,\n    }\n  }\n\n  handleChange = (event) => {\n    this.setState({n: event.target.value});\n  }\n\n  runSimulation = (e) => {\n    if (e) e.preventDefault();\n    this.setState({loading: true}, () => {\n      const permutations = this.findPerms();\n      this.setState({permutations, loading: false})\n    });\n  }\n\n  findPerms = () => {\n    const base = [];\n    let cases = [];\n    for (let i = 1; i <= this.state.n; i++) {\n      base.push(i);\n    }\n    const permutations = this.perm(base, cases);\n    return permutations;\n  }\n\n  perm = (base, cases) => {\n    let ret = [];\n\n    for (let i = 0; i < base.length; i++) {\n      let rest = this.perm(base.slice(0, i).concat(base.slice(i + 1)), cases);\n\n      if(!rest.length) {\n        ret.push([base[i]])\n      } else {\n        cases[rest.length] ? cases[rest.length] = cases[rest.length] + 1 : cases[rest.length] = 1;\n        for(let j = 0; j < rest.length; j++) {\n          ret.push([base[i]].concat(rest[j]))\n        }\n      }\n    }\n    return ret;\n  }\n\n  render() {\n    return (\n      <AppContainer>\n        <h1>Sorting Algorithms Representation</h1>\n        <h3>Insertion Sort</h3>\n        <Control>\n          <p>Ingrese el tamaño del array sobre el cual permutará:</p>\n          <form>\n            <label>\n              N: \n              <input\n                type='number'\n                name='n'\n                value={this.state.n}\n                onChange={this.handleChange}/>\n            </label>\n            <button type='submit' onClick={this.runSimulation}>Run</button>\n          </form>\n        </Control>\n        {this.state.permutations && !this.state.loading &&\n        <SortingComponents>\n          <IsortCompPlot permutations={this.state.permutations} n={this.state.n}/>\n          <IsortTimePlot permutations={this.state.permutations} n={this.state.n}/>\n          <IsortWhileQuestionPlot permutations={this.state.permutations} n={this.state.n}/>\n        </SortingComponents>\n      }\n      </AppContainer>\n    );\n  }\n}\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}